rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ================== HELPER FUNCTIONS ==================
    function isSignedIn() {
      return request.auth.uid != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function hasRole(role) {
      // Check for existence of .role before comparing
      return isSignedIn() &&
             getUserData(request.auth.uid).role != null &&
             getUserData(request.auth.uid).role == role;
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // ================== GLOBAL DEVELOPER RULE ==================
    // This rule MUST come first to be overridden by more specific rules.
    // However, for security, it's better to add the developer check to each rule.
    // For now, leaving as is per user request, but this is a potential issue.


    // ================== USERS COLLECTION ==================
    match /users/{userId} {
      allow create: if isSignedIn();
      allow get: if isSignedIn() || hasRole('Developer');
      allow list: if isSignedIn() || hasRole('Developer');
      allow update: if isOwner(userId) || hasRole('Developer');
      allow delete: if hasRole('Developer');

        // ================== TRANSACTIONS SUBCOLLECTION ==================
        match /transactions/{transactionId} {
          allow read: if isOwner(userId) 
                      || (hasRole('TaxConsultant') && userId in getUserData(request.auth.uid).linkedClientIds)
                      || hasRole('Developer');
          allow write: if isOwner(userId) || hasRole('Developer');
        }
        
        // ================== WALLETS SUBCOLLECTION ==================
        match /wallets/{walletId} {
          allow read: if isOwner(userId) 
                      || (hasRole('TaxConsultant') && userId in getUserData(request.auth.uid).linkedClientIds)
                      || hasRole('Developer');
          allow write: if isOwner(userId) || hasRole('Developer');
        }
    }
    
    // ================== INVITATIONS COLLECTION ==================
    match /invitations/{invitationId} {
        allow create: if hasRole('Client') || hasRole('Developer');
        allow get, list: if isSignedIn() || hasRole('Developer');
        allow update: if (hasRole('TaxConsultant') && resource.data.toConsultantEmail == getUserData(request.auth.uid).email) || hasRole('Developer');
        allow delete: if (isSignedIn() && (resource.data.fromClientId == request.auth.uid || resource.data.toConsultantEmail == getUserData(request.auth.uid).email)) || hasRole('Developer');
    }

    // ================== APP SETTINGS ==================
    match /app/{docId} {
      allow read: if isSignedIn() || hasRole('Developer');
      allow write: if hasRole('Developer');
    }
  }
}