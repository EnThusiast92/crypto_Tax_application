
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // A user can manage their own document.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    
    // A user can manage their own wallets subcollection.
    match /users/{userId}/wallets/{walletId} {
      allow read, write, create, delete: if request.auth.uid == userId;
    }

    match /invitations/{invitationId} {
      // Allow read/delete if the user is the sender OR the intended recipient.
      allow read, delete: if request.auth.uid != null && 
                           (exists(/databases/$(database)/documents/invitations/$(invitationId)) && (
                             resource.data.fromClientId == request.auth.uid ||
                             resource.data.toConsultantEmail == request.auth.token.email
                           ));
      // Allow creation by any authenticated user (app logic should control who can send).
      allow create: if request.auth.uid != null;
      // Allow consultants to accept/update their invites.
      allow update: if request.auth.uid != null &&
                       (exists(/databases/$(database)/documents/invitations/$(invitationId)) &&
                         resource.data.toConsultantEmail == request.auth.token.email);
    }
    
    match /app/settings {
        allow read: if request.auth.uid != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Developer';
    }
  }
}
