rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;

      // Users can only read and write to their own wallets subcollection.
      match /wallets/{walletId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Invitations can be read by the client who sent it or the consultant it was sent to.
    // They can be created by any authenticated client and deleted by the sender.
    match /invitations/{invitationId} {
      allow read: if request.auth != null && 
                   (request.auth.uid == resource.data.fromClientId || request.auth.token.email == resource.data.toConsultantEmail);
      allow create: if request.auth != null && request.resource.data.fromClientId == request.auth.uid;
      allow delete: if request.auth != null && request.auth.uid == resource.data.fromClientId;
      allow update: if request.auth != null && request.auth.token.email == resource.data.toConsultantEmail;
    }

    // App settings are readable by any authenticated user, but only writable by developers.
    match /app/settings {
       allow read: if request.auth != null;
       allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Developer';
    }
  }
}
