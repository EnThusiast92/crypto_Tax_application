rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ================== HELPER FUNCTIONS ==================
    function isSignedIn() {
      return request.auth.uid != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function hasRole(role) {
      // This is a potentially unsafe function if user doc doesn't exist.
      // It is kept this way based on the provided working rules.
      // A safer version would check if `getUserData()` returns null.
      return isSignedIn() && getUserData(request.auth.uid).role == role;
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // ================== GLOBAL DEVELOPER RULE ==================
    // This rule is evaluated if no other rule matches.
    match /{path=**} {
      allow read, write: if hasRole('Developer');
    }

    // ================== USERS COLLECTION ==================
    match /users/{userId} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn(); // Needed for consultant existence check
      allow update: if isOwner(userId)
                    || (hasRole('TaxConsultant') && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['linkedConsultantId']))
                    || (hasRole('Client') && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['linkedClientIds']));
    }

    // ================== TRANSACTIONS SUBCOLLECTION ==================
    match /users/{userId}/transactions/{transactionId} {
      allow write: if isOwner(userId);
      allow read: if isOwner(userId) 
                  || (hasRole('TaxConsultant') && userId in getUserData(request.auth.uid).linkedClientIds);
    }
    
    // ================== WALLETS SUBCOLLECTION (FIXED) ==================
    match /users/{userId}/wallets/{walletId} {
      allow write: if isOwner(userId);
      allow read: if isOwner(userId) 
                  || (hasRole('TaxConsultant') && userId in getUserData(request.auth.uid).linkedClientIds);
    }
    
    // ================== INVITATIONS COLLECTION ==================
    match /invitations/{invitationId} {
        allow create: if hasRole('Client');
        allow get, list: if isSignedIn() && (resource.data.toConsultantEmail == getUserData(request.auth.uid).email || resource.data.fromClientId == request.auth.uid);
        allow update: if hasRole('TaxConsultant') && resource.data.toConsultantEmail == getUserData(request.auth.uid).email;
        allow delete: if isSignedIn() && (resource.data.fromClientId == request.auth.uid || resource.data.toConsultantEmail == getUserData(request.auth.uid).email);
    }

    // ================== APP SETTINGS ==================
    match /app/{docId} {
      allow read: if isSignedIn();
    }
  }
}
