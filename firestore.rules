rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ================== HELPER FUNCTIONS ==================
    function isSignedIn() {
      return request.auth.uid != null;
    }

    // This function can be used in rules for GET, CREATE, UPDATE, DELETE but NOT for LIST queries.
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Safer hasRole function to be used for non-list rules.
    function hasRole(role) {
      return isSignedIn() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             getUserData().role == role;
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // ================== GLOBAL DEVELOPER RULE ==================
    // Developers can read/write anything. This rule should be placed first.
    match /{path=**} {
      allow read, write: if hasRole('Developer');
    }

    // ================== USERS COLLECTION ==================
    match /users/{userId} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn(); // Allows querying the users collection.

      allow update: if isOwner(userId);
    }
    
    // ================== TRANSACTIONS SUBCOLLECTION ==================
    match /users/{userId}/transactions/{transactionId} {
      allow read, write: if isOwner(userId) || (hasRole('TaxConsultant') && userId in getUserData().linkedClientIds);
    }

    // ================== WALLETS SUBCOLLECTION (CORRECTED) ==================
    // This rule allows a user to read/write/list their own wallets.
    // It also allows a linked consultant to read the wallets.
    // Importantly, the read rule for owners does not use `get`, so it works for `list` queries.
    match /users/{userId}/wallets/{walletId} {
      allow write: if isOwner(userId);
      allow read: if isOwner(userId) || (hasRole('TaxConsultant') && userId in getUserData().linkedClientIds);
    }
    
    // ================== INVITATIONS COLLECTION ==================
    match /invitations/{invitationId} {
        allow create: if hasRole('Client');
        allow get, list: if isSignedIn();
        allow update: if hasRole('TaxConsultant');
        allow delete: if isSignedIn();
    }

    // ================== APP SETTINGS ==================
    match /app/{docId} {
      allow read: if isSignedIn();
      allow write: if hasRole('Developer');
    }
  }
}
